service: database-sync

custom:
  pythonRequirements:
    dockerizePip: true

  sourceHost: ${opt:source_host}
  sourceUser: ${opt:source_user}
  sourcePass: ${opt:source_pass}
  sourceDb: ${opt:source_db}
  targetHost: ${opt:target_host}
  targetUser: ${opt:target_user}
  targetPass: ${opt:target_pass}
  targetDb: ${opt:target_db}
  dailyTables: ${opt:daily_tables}
  hourlyTables: ${opt:hourly_tables}

package:
  exclude:
    - venv/**
    - node_modules/**

provider:
  name: aws
  vpc:
    securityGroupIds:
      - ${opt:security_group}
    subnetIds:
      - ${opt:subnet_1}
      - ${opt:subnet_2}
      - ${opt:subnet_3}
  timeout: 900
  runtime: python3.6
  region: eu-west-1
  environment:
    SOURCE_HOST: ${self:custom.sourceHost}
    SOURCE_USER: ${self:custom.sourceUser}
    SOURCE_PASS: ${self:custom.sourcePass}
    SOURCE_DB: ${self:custom.sourceDb} 
    TARGET_HOST: ${self:custom.targetHost}
    TARGET_USER: ${self:custom.targetUser}
    TARGET_PASS: ${self:custom.targetPass}
    TARGET_DB: ${self:custom.targetDb}
    TABLE_LIST_DAILY: ${self:custom.dailyTables}
    TABLE_LIST_HOURLY: ${self:custom.hourlyTables}

functions:
  syncHourly:
    handler: db_sync_handler.sync_hourly
    events:
      - schedule:
          rate: cron(0 0 * ? * *)
  syncDaily:
    handler: db_sync_handler.sync_daily
    events:
      - schedule:
          rate: cron(0 0 0 * * ?)
          
          
#   execSqlExecuter:
#     handler: file_sync_handler.script_to_be_executed
#     events:
#       - schedule:
#           rate: cron(54 2 * * ? *)

iamRoleStatements:
  - Effect: Allow
    Action:
    - rds:*
    Resource: "*"

plugins:
  - serverless-python-requirements
